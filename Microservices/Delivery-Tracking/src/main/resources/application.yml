# spring.application.name=Delivery-Tracking

server:
  port: 8080

spring:
  application:
    name: Delivery-Tracking

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5433}/${DB_NAME:delivery-tracking-db}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}

  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping:
          delivery-placement-event:com.example.delivery.tracking.domain.event.DeliveryPlacedEvent,
          delivery-picked-up-event:com.example.delivery.tracking.domain.event.DeliveryPickUpEvent,
          delivery-fulfilled-event:com.example.delivery.tracking.domain.event.DeliveryFulFilledEvent

eureka:
  client:
    service-url:
      default-zone: http://localhost:8761/eureka/
  instance:
    instance-id: ${random.value}
    prefer-ip-address: true

resilience4j:
  retry:
    configs:
      default: 
        max-attempts: 2
        wait-duration: 20ms
    instances:
      Retry_CourierAPIClient_payoutCalculation:
        base-config: default
        max-attempts: 3
        retry-exceptions:
          - org.springframework.web.client.ResourceAccessException
        ignoreExceptions:
          - org.springframework.web.client.HttpServerErrorException